Please answer the below core-java Questions:


What jdk contains or composed of and define each components?
    Ans: JRE(Java Runtime Environment), Java (the interpreter/loader), Javac(the compiler),
         jar (an archiver), javadoc (a document generator),

What is IDE?
    Ans: Integrated Development Environment--an application with comprehensive facilities
         for developing software. Typically contains a source code editor, build automation tools
         and a debuger

What are the IDEs available in the market to support java?
    Ans: Eclipse, Intellij, NetBeans, Android Studio, Enide Studio, Blue J, jEdit, jGrasp,
         JSource, JDeveloper, DrJava --- these are some of the more popular IDEs available today.

Explain the entire java life cycle.
    Ans: A Java program is written using either a Text Editor like Textpad or an IDE
         and is saved as a .java file. The .java file is then compiled using Java
         compiler and a .class file is obtained from it. The .class file is now
         portable and can be used to run this Java program in any platform. Class file
         is interpreted by the JVM installed on a particular platform. JVM is part of
         the JRE software.

what is class?
    Ans: classes are blueprints or templates for creating objects which define its properties and
         behaviours. Class objects exhibit the properties and behaviors defined by its class.

What is object?
    Ans: an object is an instance of a class and can be a combination of variables, functions
         and data structures.

What is the entry point of an application?
    Ans: main()

Why main is static?
    Ans: So that main() can be called before the creation of an object. This is need because main()
         is called by the JVM before any objects are made.

What is the difference between an Interface and Abstract class?
    Ans: Interface methods are strictly abstract and cannot be implemented. Abstract classes can
         contain instance methods that can be implemented. Variables in interface are final whereas
         variables in abstract may be non-final.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
    Ans: kind of. you can extend the classes to a knew class where you can implement an object. The
    compiler also allows you to create anonymous objects of the interfaces in your code.

what is Access Specifier?
    Ans: Access Specifiers regulate access to classes, fields and methods.These Specifiers determine
         whether a field or method in a class, can be invoked by another method in another class or
         sub-class. Access Specifiers can be used to restrict access.

What is OOP ? Define each feature of java OOP.
    Ans: Object Oriented Programming. Encapsulation, Polymorphism and Inheritance.
         Inheritance: allows new objects to take on the characteristics of existing objects. A class
                      used as the basis for inheritance is called a superclass, and a class that inherits
                      the superclass is called a sub-class.
         Polymorphism: It's the ability to redefine methods for derived classes. refers to a language's
                       ability to process objects differently depending on their data type or class.
         Encapsulation: It hides the data. It binds the data and functions together that manipulate
                        the data and it keeps both safe from outside interference.

What is API? Name list of API that you have used so far.
    Ans: Application Programming Interface-- Eclipse, IntelliJ,

Does java support multiple inheritance?
    Ans: No

What is method overloading and when it happens?
    Ans: it's a feature that allows a class to have multiple methods with the same name as long as
         the argument lists are different. it occurs during compile-time.

What is method overriding and when it happens?
    Ans: it's a feature that allows a class to inherit from a superclass that has similar behaviours.
         It has the same name, type of parameters, and return type as the method it overrides.
         This occurs during run-time

Explain exceptions in java and how to handle it.
    Ans: an exception is an event which occurs during the execution of the program that disrupts
         the normal flow of the program's instructions. Using the try...catch block, if an exception
         is found in try, the control of the execution  gets passed to the catch block where the
         exception is caught. Once the try block completes all the executions, the code inside
         the finally block gets executed.

What is static keyword in java? How it has been used in variables and methods ?
    Ans: A static keyword allows you to call a method even if you've never created the object
         it belongs it.

What is final and how it has been used variables and methods?
    Ans: It's a keyword used to make the values of a variable unchangeable. However you can still
         change the values in the constructor or methods of the class.

What is final, finally and finalize?
    Ans: final is a keyword and can be used with variables, methods and classes and has a different
         meaning for each of them. I explained final above for variables and methods, but for classes
         that are made final means they cannot be sub-classed. Finally is also a keyword but it's used
         in exception handling, when all exceptions have all been caught, the finally block finally
         executes the code. Finalize is a method called by garbage collector just before collecting
         elligible objects.

What is a constructor ?
    Ans: a block of code that is called when an instance of an object is created. It has no return
         type and the name of the constructor must share the same name as the class.

What is "this" keyword in java ?
    Ans: 'this' is a reference to the current object whose method or constructor is being called.

What is "super" keyword in java?
    Ans: 'super' is a keyword that allows you to invoke a method from a superclass that's been
         overridden by another method.

What is JVM stand for ?
    Ans: JVM
What version of java are you using?
    Ans: 1.8.0_91
What is JAR stand for ?
    Ans: Java Archive
What is compile time and run time?
    Ans: compile time is when the source code is compiled into machine code so that the program can be
    executed. After the code has been compilled and the application is running, it's called runtime
What is heap?
    Ans: it's the area where memory is allocated for class instances and arrays during runtime.

How java manage it's memory?
    Ans: by calling the garbage collector. It cleans up the the data that is no longer needed.
What is the difference between String, StringBuffer and StringBuilder?
    Ans: String is immutable, meaning when you alter it's value another object gets created.
         StringBuffer and StringBuilder are in fact mutable and their values can be altered.
         StringBuffer is thread-safe and StringBuilder is not.